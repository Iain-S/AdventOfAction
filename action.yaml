name: "Advent Of Action"
description: "Runs code in subfolders, records execution times, and updates README"
branding:
  icon: 'triangle'
  color: 'green'
inputs:
  working-directory:
    description: "The working directory. Default is the root of the repository."
    required: false
    default: "."
  gpg-passphrase:
    description: "The passphrase for the GPG-encrypted files."
    required: true
  timeout-seconds:
    description: "The time allowed for each solution to provide an answer for each part."
    required: false
    default: "60"
  python-version:
    description: "Python version to use"
    required: false
    default: "3.12"
  racket-version:
    description: "Racket version to use. -1 for none."
    required: false
    default: "8.14"
  ocaml-version:
    description: "Ocaml version to use. -1 for none."
    required: false
    default: "5"
  dotnet-version:
    description: "DotNet version to use. -1 for none."
    required: false
    default: "8"
  rust-version:
    description: "Rust toolchain version to use. -1 for none."
    required: false
    default: "1.84"
  go-version:
    description: "Golang version to use. -1 for none."
    required: false
    default: "1.23.6"
  haskell-version:
    description: "GHC version to use. -1 for none."
    required: false
    default: "9.10"
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Setup Racket
      if: ${{ inputs.racket-version != -1 }}
      uses: Bogdanp/setup-racket@v1.11
      with:
        # Note "version" vs "racket-version".
        version: ${{ inputs.racket-version }}
    - name: Set up Rust
      if: ${{ inputs.rust-version != -1 }}
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ inputs.rust-version }}
    - name: Set up Dotnet
      if: ${{ inputs.dotnet-version  != -1 }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    - name: Set up Ocaml
      if: ${{ inputs.ocaml-version != -1 }}
      uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: ${{ inputs.ocaml-version }}
    - name: Set up Golang
      if: ${{ inputs.go-version != -1 }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}
    - name: Setup Haskell
      if: ${{ inputs.haskell-version != -1 }}
      uses: haskell-actions/setup@v2.7.9
      with:
        ghc-version: ${{ inputs.haskell-version }}
    - name: Install package
      run: echo $GITHUB_ACTION_PATH && pip install $GITHUB_ACTION_PATH
      shell: bash
    - name: Run our Python module
      run: |
        pushd ${{ inputs.working-directory }}
        which opam && eval $(opam env)
        echo "::add-mask::${{ inputs.gpg-passphrase }}"
        export GPG_PASS="${{ inputs.gpg-passphrase }}"
        export TIMEOUT_SECONDS="${{ inputs.timeout-seconds }}"
        python -m advent_of_action.main
      shell: bash
